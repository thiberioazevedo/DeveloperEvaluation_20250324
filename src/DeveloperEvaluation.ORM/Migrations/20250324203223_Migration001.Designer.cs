// <auto-generated />
using System;
using DeveloperEvaluation.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DeveloperEvaluation.ORM.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20250324203223_Migration001")]
    partial class Migration001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeveloperEvaluation.Domain.Entities.CDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("CDI")
                        .HasColumnType("numeric");

                    b.Property<decimal>("GrossValue")
                        .HasColumnType("numeric");

                    b.Property<int>("Months")
                        .HasColumnType("integer");

                    b.Property<decimal>("NetValue")
                        .HasColumnType("numeric");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<decimal>("TB")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TaxPercentage")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id")
                        .HasName("PK_CDBs");

                    b.ToTable("CDBs", (string)null);
                });

            modelBuilder.Entity("DeveloperEvaluation.Domain.Entities.MonthCDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CDBId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("FinalValue")
                        .HasColumnType("numeric");

                    b.Property<decimal>("InitialValue")
                        .HasColumnType("numeric");

                    b.Property<int>("Month")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("PK_MonthsCDBs");

                    b.HasIndex("CDBId", "Month")
                        .IsUnique()
                        .HasDatabaseName("UX_MonthsCDBs_Month_CDBId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CDBId", "Month"), "btree");

                    b.ToTable("MonthsCDBs", (string)null);
                });

            modelBuilder.Entity("DeveloperEvaluation.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DeveloperEvaluation.Domain.Entities.MonthCDB", b =>
                {
                    b.HasOne("DeveloperEvaluation.Domain.Entities.CDB", "CDB")
                        .WithMany("MonthCDBCollection")
                        .HasForeignKey("CDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MonthsCDBs_CDBs");

                    b.Navigation("CDB");
                });

            modelBuilder.Entity("DeveloperEvaluation.Domain.Entities.CDB", b =>
                {
                    b.Navigation("MonthCDBCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
